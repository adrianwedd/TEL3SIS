name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install ruff
        run: pip install ruff
      - name: Run ruff
        run: ruff .

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Install git-secrets and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y git-secrets jq
          git secrets --install -f
      - name: Run pip-audit
        run: |
          pip-audit -r requirements.txt -r requirements-dev.txt \
            --format cyclonedx-json --progress-spinner off > audit.json
          if jq -e '.vulnerabilities[] | select(.ratings[]?.severity == "HIGH" or .ratings[]?.severity == "CRITICAL")' audit.json >/dev/null; then
            echo "High severity vulnerabilities detected" >&2
            cat audit.json
            exit 1
          fi
      - name: Run pre-commit hooks
        run: pre-commit run --all-files --show-diff-on-failure
      - name: Run migrations
        env:
          SECRET_KEY: x
          BASE_URL: http://localhost
          TWILIO_ACCOUNT_SID: sid
          TWILIO_AUTH_TOKEN: token
          SENDGRID_API_KEY: sg
          SENDGRID_FROM_EMAIL: from@test
          NOTIFY_EMAIL: notify@test
          DATABASE_URL: sqlite:///test.db
        run: alembic upgrade head
      - name: Run pytest
        run: pytest -vv

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: runtime
          load: true
          tags: tel3sis:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
