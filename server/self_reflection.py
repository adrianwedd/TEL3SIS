import os
from typing import Any
from loguru import logger

__all__ = ["generate_self_critique"]


def generate_self_critique(transcript: str, *, client: Any | None = None) -> str:
    """Return a short self-critique generated by an LLM."""

    api_key = os.getenv("OPENAI_API_KEY")
    if client is None:
        if not api_key:
            return ""
        try:
            from openai import OpenAI

            client = OpenAI(api_key=api_key)
        except Exception as exc:  # noqa: BLE001
            logger.error("Failed to init OpenAI client: %s", exc)
            return ""

    try:
        resp = client.chat.completions.create(
            model=os.getenv("OPENAI_MODEL", "gpt-3.5-turbo"),
            messages=[
                {
                    "role": "system",
                    "content": (
                        "You are a monitoring agent generating a short critique "
                        "about the previous call. Comment on helpfulness and "
                        "any failures."
                    ),
                },
                {"role": "user", "content": transcript},
            ],
            max_tokens=100,
            temperature=0,
        )
        return resp["choices"][0]["message"]["content"].strip()
    except Exception as exc:  # noqa: BLE001
        logger.error("Self-reflection failed: %s", exc)
        return ""
